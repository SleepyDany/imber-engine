cmake_minimum_required(VERSION 3.28)

set(PROJECT_ROOT_DIR ${CMAKE_CURRENT_LIST_DIR}/)
set(PROJECT_SOURCE_DIR ${PROJECT_ROOT_DIR}/Source)
set(PROJECT_BINARY_DIR ${PROJECT_ROOT_DIR}/Binaries/${CMAKE_SYSTEM_NAME})

# Visual Studio configuration
if (CMAKE_GENERATOR STREQUAL "Visual Studio 17 2022")
    set(VS_DEBUGGER_WORKING_DIRECTORY ${PROJECT_BINARY_DIR})
endif()

file(GLOB_RECURSE SOURCE_FILES CONFIGURE_DEPENDS
    LIST_DIRECTORIES false
    "${PROJECT_SOURCE_DIR}/*.h"
    "${PROJECT_SOURCE_DIR}/*.inl"
    "${PROJECT_SOURCE_DIR}/*.cpp"
)

add_executable(Playground)

# TODO: diff Public/Private source files
target_sources(Playground
    PUBLIC ${SOURCE_FILES}
)

# TODO: add Public/Private include dirs

foreach(PROJECT_CONFIG IN LISTS CMAKE_CONFIGURATION_TYPES)
    string(TOUPPER ${PROJECT_CONFIG} PROJECT_UPPER_CONFIG)
    set_target_properties(Playground
        PROPERTIES
        PDB_OUTPUT_DIRECTORY_${PROJECT_UPPER_CONFIG} ${PROJECT_BINARY_DIR}/${PROJECT_CONFIG}
        RUNTIME_OUTPUT_DIRECTORY_${PROJECT_UPPER_CONFIG} ${PROJECT_BINARY_DIR}/${PROJECT_CONFIG}
        LIBRARY_OUTPUT_DIRECTORY_${PROJECT_UPPER_CONFIG} ${PROJECT_BINARY_DIR}/${PROJECT_CONFIG}
        ARCHIVE_OUTPUT_DIRECTORY_${PROJECT_UPPER_CONFIG} ${PROJECT_BINARY_DIR}/${PROJECT_CONFIG}
    )
endforeach()

target_link_libraries(Playground
    PUBLIC Imber::Engine
)
